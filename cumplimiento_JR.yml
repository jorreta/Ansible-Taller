- name: Playbook de cumplimiento
  hosts: node1
  become: true
  gather_facts: true
  vars:
    allowed_users:
      - root
      - daemon
    password_min_length: 11
    password_complexity: "YES"
    password_max_age: 90
    allowed_services:
      - sshd
      - chronyd
      - crond
    required_packages:
      - audit
      - rsyslog
  tasks:
    - name: Comp1:Validar usuarios permitidos en /etc/passwd
      shell: "cut -d: -f1 /etc/passwd"
      register: passwd_users
      changed_when: false
    - name: Comp2:Verificar configuración de complejidad de contraseñas
      lineinfile:
        path: /etc/security/pwquality.conf
        regexp: "^minclass"
        line: "minclass = 4"  # Exige 4 tipos de caracteres: mayúsculas, minúsculas, números, símbolos
        state: present
      when: password_complexity == "YES"
    - name: Comp3:Verificar configuración de longitud mínima de contraseñas
      lineinfile:
        path: /etc/security/pwquality.conf
        regexp: "^minlen"
        line: "minlen = {{ password_min_length }}"
        state: present
    - name: Comp4:Verificar edad máxima de contraseñas
      lineinfile:
        path: /etc/login.defs
        regexp: "^PASS_MAX_DAYS"
        line: "PASS_MAX_DAYS {{ password_max_age }}"
        state: present
    - name: Comp5:Asegurarse de que el root sólo pueda hacer login desde la consola
      lineinfile:
        path: /etc/securetty
        line: tty1
        create: yes
    - name: Comp6:Asegurarse de que el root sólo pueda hacer login desde la consola
      lineinfile:
        path: /etc/securetty
        line: tty1
        create: yes
    - name: Com7:Configurar logs del sistema con rsyslog
      service:
        name: rsyslog
        state: started
        enabled: true
    - name: Com8:Configuración de auditoría de seguridad
      lineinfile:
        path: /etc/audit/auditd.conf
        regexp: "^max_log_file_action"
        line: "max_log_file_action = keep_logs"
        state: present
    - name: Comp9:Asegurarse de que sólo existan usuarios permitidos
      fail:
        msg: "Usuario no autorizado encontrado: {{ item }}"
      when: item not in allowed_users
    - name: Comp10:Verificar que los paquetes requeridos estén instalados
      package:
        name: "{{ item }}"
        state: present
      loop: "{{ required_packages }}"
      loop: "{{ passwd_users.stdout_lines }}"
      
      


